-- Updates colours to support UI elements for additional peers

	local num_player_slots = BigLobbyGlobals:num_player_slots()

	-- Override colours here, RGB values, divide by 255 to get a 0-1 value range that game wants
	local green = Vector3(194, 252, 151) / 255
	local blue = Vector3(120, 183, 204) / 255
	local red = Vector3(178, 104, 89) / 255
	local brown = Vector3(204, 161, 102) / 255
	local pink = Vector3(255, 182, 193) / 255
	local purple = Vector3(186, 90, 186) / 255
	local team_ai = Vector3(0.2, 0.8, 1)

	-- Fixed colours
	tweak_data.peer_vector_colors = {
		green,
		blue,
		red,
		brown,
		pink,
		purple
	}

	-- This doesn't appear to be referenced, not sure why it still exists in codebase
	tweak_data.peer_colors = {
		"mrgreen",
		"mrblue",
		"mrred",
		"mrpink",
		"mrbrown",
		"mrpurple"
	}

	-- Make sure we have enough colours to support the number of player slots, creates random colours
	if #tweak_data.peer_vector_colors < num_player_slots then
		-- We want random colours generated by the PRNG to be consistent across players, so use the same seed
		math.randomseed( 1337 )

		for i = #tweak_data.peer_vector_colors, num_player_slots do
			-- RGB channels
			local red, blue, green
			local random_colour

			red   = math.random(0, 255)
			green = math.random(0, 255)
			blue  = math.random(0, 255)
			random_colour = Vector3(red, green, blue) / 255

			table.insert(tweak_data.peer_vector_colors, random_colour)
			table.insert(tweak_data.peer_colors, tostring("team_colour_") .. i)
		end

		-- Make the seed randomish again, so other mods that rely on it don't get affected.
		math.randomseed( os.time() )
	end

	-- AI labels will use the last value so we add it at the end
	table.insert(tweak_data.peer_vector_colors, team_ai)
	table.insert(tweak_data.peer_colors, "mrai")

	-- Dynamically added now based on peer_vector_colors table
	tweak_data.chat_colors = {}
	for i = 1, #tweak_data.peer_vector_colors do
		tweak_data.chat_colors[i] = Color(tweak_data.peer_vector_colors[i]:unpack())
	end

	-- Use the same colours created for chat for preplanning
	tweak_data.preplanning_peer_colors = {}
	for i = 1, #tweak_data.peer_vector_colors do
		tweak_data.preplanning_peer_colors[i] = Color(tweak_data.peer_vector_colors[i]:unpack())
	end
